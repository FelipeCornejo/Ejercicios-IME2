color = "race")
print (g)
g <- ggqqplot (peso_raza,
x = "bwt",
y = "race",
color = "race")
g <- g + facet_wrap (~race)
print (g)
library(MASS)
library(dplyr)
library (tidyverse)
library(ggpubr)
datos <- birthwt
peso_raza <- datos %>% select(bwt,race)
peso_raza <- peso_raza %>% arrange(race)
#Dado que nos piden evaluar si existen diferencias significativas entre los pesos de los bebes de distintas
#raza, se deben realizar comparaciones de distintas muestras, lo que implica realizar una prueba ANOVA.
#Condiciones para aplicar ANOVA:
#1. La escala con que se mide la variable dependiente tiene las propiedades de una escala de intervalos
#iguales.
#2. Se asume que las muestras son obtenidas al azar.
#3. Para comprobar o suponer que las muestras provienen de una población con distribución normal,
#se aplica el grafico q-q.
g <- ggqqplot (peso_raza,
x = "bwt",
y = "race",
color = "race")
g <- g + facet_wrap (~race)
print (g)
#4. Se puede visualizar que los muestras tienden a una distribución normal, por lo que se asume que la
#población tambien lo hace.
#
muestra1 <- peso_raza %>% filter(race=="1")
muestra2 <- peso_raza %>% filter(race=="2")
muestra3 <- peso_raza %>% filter(race=="3")
View(muestra1)
muestra1[,1]
muestra1 <- peso_raza %>% filter(race=="1")
var1 <- var(muestra1[,1])
muestra2 <- peso_raza %>% filter(race=="2")
var2 <- var(muestra2[,1])
muestra3 <- peso_raza %>% filter(race=="3")
var3 <- var(muestra3[,1])
cat("Var1,Var2,Var3")
print(var1,var2,var3)
cat("Var1")
print(var1)
cat("Var1")
print(var1)
cat("Var2")
print(var2)
cat("Var3")
print(var3)
cat("Razon entre variable mayor y menor")
print(dif)
dif <- var1/var2
cat("Razon entre variable mayor y menor")
print(dif)
cat ("\n\ nProcedimiento ANOVA usando ezANOVA \n\n")
prueba1 <- ezANOVA (
data = peso_raza,
dv = bwt,
between = peso_raza,
wid = instancia,
return_aov = TRUE )
print(prueba1)
install.packages("ez")
cat ("\n\ nProcedimiento ANOVA usando ezANOVA \n\n")
prueba1 <- ezANOVA (
data = peso_raza,
dv = bwt,
between = peso_raza,
wid = instancia,
return_aov = TRUE )
print(prueba1)
library(ez)
cat ("\n\ nProcedimiento ANOVA usando ezANOVA \n\n")
prueba1 <- ezANOVA (
data = peso_raza,
dv = bwt,
between = peso_raza,
wid = instancia,
return_aov = TRUE )
print(prueba1)
cat ("\n\ nProcedimiento ANOVA usando ezANOVA \n\n")
prueba1 <- ezANOVA (
data = peso_raza,
dv = bwt,
wid=bwt,
between = peso_raza,
return_aov = TRUE )
print(prueba1)
# Crear el data frame en formato ancho .
A <- c(23 , 19, 25, 23, 20)
B <- c(26 , 24, 28, 23, 29)
C <- c(19 , 24, 20, 21, 17)
datos1 <- data.frame (A, B, C)
# Llevar data frame a formato largo .
datos2 <- datos %>% pivot_longer (c("A", "B", "C"),
names_to = " algoritmo ",
values_to = " tiempo ")
# Crear el data frame en formato ancho .
A <- c(23 , 19, 25, 23, 20)
B <- c(26 , 24, 28, 23, 29)
C <- c(19 , 24, 20, 21, 17)
datos1 <- data.frame(A, B, C)
# Llevar data frame a formato largo .
datos2 <- datos %>% pivot_longer (c("A", "B", "C"),
names_to = " algoritmo ",
values_to = " tiempo ")
A <- c(23, 19, 25, 23, 20)
B <- c(26, 24, 28, 23, 29)
C <- c(19, 24, 20, 21, 17)
datos1 <- data.frame(A, B, C)
# Llevar data frame a formato largo .
datos2 <- datos1 %>% pivot_longer (c("A", "B", "C"),
names_to = " algoritmo ",
values_to = " tiempo ")
View(datos1)
View(datos2)
datos [["race"]] <- factor ( datos [["race" ]])
datos [["instancia"]] <- factor (1: nrow ( datos ))
cat ("\n\ nProcedimiento ANOVA usando ezANOVA \n\n")
prueba1 <- ezANOVA (
data =datos ,
dv = bwt,
wid=instancia,
between = race,
return_aov = TRUE )
print(prueba1)
g2 <- ezPlot (
data =datos ,
dv = bwt,
wid=instancia,
between = race,
return_aov = TRUE )
print(g2)
g2 <- ezPlot (
data =datos ,
dv = bwt,
wid=instancia,
between = race )
print(g2)
g2 <- ezPlot (
data =datos ,
dv = bwt,
wid=instancia,
between = race,
x = race)
print(g2)
datos <- read.table(textConnection(texto), header = TRUE)
datos <- scale(datos)
View(datos)
library(dplyr)
library ( tidyverse )
library ( ggpubr )
library (ez)
texto <- ("
Instancia Optimo R R2 R3 G
'brock400_2' 26 36.4 35.7 34.8 33
'brock400_4' 30 46.2 43.7 42.6 41
'C2000.9' 77 99.8 97.4 94.6 91
'c-fat500-10' 123 124 124 124 123
'hamming10-2' 509 677.8 601.9 598.6 509
'johnson32-2-4' 13 13 13 13 13
'keller6' 56 80.5 72 69.5 66.8
'MANN_a81' 1097 1114.8 1114.8 1114.8 1101.1
'p-hat1500-1' 9 14.1 12.9 12.1 11
'p-hat1500-3' 91 109.2 107.3 100.4 99
'san1000' 12 19.4 19.4 19.3 17
'san400_0.7_1' 37 57.4 56.5 56.5 56
'san400_0.9_1' 97 152.9 142.6 140.6 105
'frb100-40' 97 130.6 120.3 116.5 115
'frb59-26-1' 56 75.8 69.1 66.7 67
'1et.2048' 313 396.6 360.6 348.1 336.6
'1zc.4096' 376 481.2 461.8 447.6 426.5
'2dc.2048' 21 29.4 26.3 25.1 24
")
alfa <- 0.01
datos <- read.table(textConnection(texto), header = TRUE)
datos <- scale(datos)
datos2 <- datos %>% select(Instancias,R, R2,R3,G)
datosL <- datos %>% pivot_longer (c("Optimo", "R", "R2",
"R3","G"),
names_to = "algoritmo", values_to = "tiempo")
#PREGUNTA 1
View(datos)
datos <- read.table(textConnection(texto), header = TRUE)
datos
datos <- scale(datos)
datos <- read.table(textConnection(texto), header = TRUE)
datos$Optimo <- scale(datos$Optimo)
datos$R <- scale(datos$R)
datos$R2 <- scale(datos$R2)
datos$R3 <- scale(datos$R3)
datos$G <- scale(datos$G)
datos2 <- datos %>% select(Instancia,R, R2,R3,G)
datosL <- datos %>% pivot_longer (c("Optimo", "R", "R2",
"R3","G"),
names_to = "algoritmo", values_to = "tiempo")
g <- ggqqplot (tiempo , x = "tiempo", y = "algoritmo", color = "algoritmo")
g <- g + facet_wrap (~ algoritmo )
print (g)
library(dplyr)
library ( tidyverse )
library ( ggpubr )
library (ez)
datos2 <- datos %>% select(Instancia,R, R2,R3,G)
datosL <- datos %>% pivot_longer (c("Optimo", "R", "R2",
"R3","G"),
names_to = "algoritmo", values_to = "tiempo")
#tiene una escala de intervalos iguales (de hecho tiene escala de razón).
#2.Como las mediciones dependen de cada algortimo y de cada entrada de datos que se dan,
#se confirma la independencia entre al interior de cada grupo
#3.Se implementa la prueba de normalidad para verificar el supuesto:
g <- ggqqplot (tiempo , x = "tiempo", y = "algoritmo", color = "algoritmo")
g <- g + facet_wrap (~ algoritmo )
print (g)
View(datosL)
View(datosL)
g <- ggqqplot (datosL, x ="tiempo", y = "algoritmo", color = "algoritmo")
g <- g + facet_wrap (~ algoritmo )
print (g)
shapiro1 <- shapiro.test(datos[["Optimo"]])
print(shapiro1)
shapiro2 <- shapiro.test(datos[["R"]])
print(shapiro2)
shapiro3 <- shapiro.test(datos[["R2"]])
print(shapiro3)
shapiro4 <- shapiro.test(datos[["R3"]])
print(shapiro4)
shapiro5 <- shapiro.test(datos[["G"]])
print(shapiro5)
pruebaANOVa <- ezANOVA ( data = datosL , dv = tiempo , within = algoritmo ,
wid = Instancia , return_aov = TRUE )
pruebaANOV <- ezANOVA ( data = datosL , dv = tiempo , within = algoritmo ,
wid = Instancia , return_aov = TRUE )
print(pruebaANOV)
datosL <- datos2 %>% pivot_longer (c( "R", "R2",
"R3","G"),
names_to = "algoritmo", values_to ="tiempo")
g <- ggqqplot (datosL, x ="tiempo", y = "algoritmo", color = "algoritmo")
g <- g + facet_wrap (~ algoritmo )
print(g)
#Como es visible en el grafico, las muestras tienden a seguir una distribucion normal, sin embargo,
#poseen valores atipicos. Por lo que se prodece a implementa la prueba de shapiro para cada algoritmo.
shapiro1 <- shapiro.test(datos[["Optimo"]])
print(shapiro1)
shapiro2 <- shapiro.test(datos[["R"]])
print(shapiro2)
shapiro3 <- shapiro.test(datos[["R2"]])
print(shapiro3)
shapiro4 <- shapiro.test(datos[["R3"]])
print(shapiro4)
shapiro5 <- shapiro.test(datos[["G"]])
print(shapiro5)
#En las tres muestras se obtiene un p<alfa, por lo que no cumplen con una distribucion
#normal, y por lo tanto, no proceden de una poblacion normal. Sin embargo, dado que la prueba
#ANOVA es robusta, se permite seguir con el analisis de las muestras.
#4. Se procede aplicar la prueba de ANOVA, ya que es una prueba robusta para muestras del mismo
#tamaño.
#H0: Ningun algoritmo es mas eficiente que otro.
#H1: Existe al menos un algoritmo mas eficiente que otro
pruebaANOV <- ezANOVA ( data = datosL , dv = tiempo , within = algoritmo ,
wid = Instancia , return_aov = TRUE )
print(pruebaANOV$p)
library(dplyr)
library ( tidyverse )
library ( ggpubr )
library (ez)
texto <- ("
Instancia Optimo R R2 R3 G
'brock400_2' 26 36.4 35.7 34.8 33
'brock400_4' 30 46.2 43.7 42.6 41
'C2000.9' 77 99.8 97.4 94.6 91
'c-fat500-10' 123 124 124 124 123
'hamming10-2' 509 677.8 601.9 598.6 509
'johnson32-2-4' 13 13 13 13 13
'keller6' 56 80.5 72 69.5 66.8
'MANN_a81' 1097 1114.8 1114.8 1114.8 1101.1
'p-hat1500-1' 9 14.1 12.9 12.1 11
'p-hat1500-3' 91 109.2 107.3 100.4 99
'san1000' 12 19.4 19.4 19.3 17
'san400_0.7_1' 37 57.4 56.5 56.5 56
'san400_0.9_1' 97 152.9 142.6 140.6 105
'frb100-40' 97 130.6 120.3 116.5 115
'frb59-26-1' 56 75.8 69.1 66.7 67
'1et.2048' 313 396.6 360.6 348.1 336.6
'1zc.4096' 376 481.2 461.8 447.6 426.5
'2dc.2048' 21 29.4 26.3 25.1 24
")
alfa <- 0.01
datos <- read.table(textConnection(texto), header = TRUE)
#Se  normalizan los datos, con el fin de implementar una distribucion normal.
datos$Optimo <- scale(datos$Optimo)
datos$R <- scale(datos$R)
datos$R2 <- scale(datos$R2)
datos$R3 <- scale(datos$R3)
datos$G <- scale(datos$G)
datos2 <- datos %>% select(Instancia,R, R2,R3,G)
datosL <- datos %>% pivot_longer (c( "Optimo","R", "R2",
"R3","G"),
names_to = "algoritmo", values_to ="tiempo")
#PREGUNTA 1
#Como solicitan verificar si existe un algoritmo eficiente en comparacion a los otros dados,
#de debe aplicar la prueba de Anova para muestras correlacionadas. Primero se verifican las condiciones
#de esta prueba:
#Condiciones:
#1.Se verifica, puesto que el tiempo, como toda magnitud física,
#tiene una escala de intervalos iguales (de hecho tiene escala de razón).
#2.Como las mediciones dependen de cada algortimo y de cada entrada de datos que se dan,
#se confirma la independencia entre al interior de cada grupo
#3.Se implementa la prueba de normalidad para verificar el supuesto:
g <- ggqqplot (datosL, x ="tiempo", y = "algoritmo", color = "algoritmo")
g <- g + facet_wrap (~ algoritmo )
print(g)
#Como es visible en el grafico, las muestras tienden a seguir una distribucion normal, sin embargo,
#poseen valores atipicos. Por lo que se prodece a implementa la prueba de shapiro para cada algoritmo.
shapiro1 <- shapiro.test(datos[["Optimo"]])
print(shapiro1)
shapiro2 <- shapiro.test(datos[["R"]])
print(shapiro2)
shapiro3 <- shapiro.test(datos[["R2"]])
print(shapiro3)
shapiro4 <- shapiro.test(datos[["R3"]])
print(shapiro4)
shapiro5 <- shapiro.test(datos[["G"]])
print(shapiro5)
#En las tres muestras se obtiene un p<alfa, por lo que no cumplen con una distribucion
#normal, y por lo tanto, no proceden de una poblacion normal. Sin embargo, dado que la prueba
#ANOVA es robusta, se permite seguir con el analisis de las muestras.
#4. Se procede aplicar la prueba de ANOVA, ya que es una prueba robusta para muestras del mismo
#tamaño.
#H0: Ningun algoritmo es mas eficiente que otro.
#H1: Existe al menos un algoritmo mas eficiente que otro
pruebaANOV <- ezANOVA ( data = datosL , dv = tiempo , within = algoritmo ,
wid = Instancia , return_aov = TRUE )
print(pruebaANOV)
#La prueba de ANOVA entrega el valor de p<alfa, por lo que se rechaza la hipotesis alternativa
#en favor de la hipotesis nula, concluyendo que ningun algoritmo es mas eficiente que otro.
#PREGUNTA 2
texto_P2 <-(" words colors interfer
15 26 42
12 5 44
16 15 32
9 25 38
21 19 44
18 19 44
21 19 32
9 14 42
21 17 35
17 21 31
16 15 29
21 20 38
13 22 47
19 15 31
19 21 34
23 17 37")
datos <- read.table(textConnection(texto_P2), header = TRUE)
library(dplyr)
library ( tidyverse )
library ( ggpubr )
library (ez)
texto_P2 <-(" words colors interfer
15 26 42
12 5 44
16 15 32
9 25 38
21 19 44
18 19 44
21 19 32
9 14 42
21 17 35
17 21 31
16 15 29
21 20 38
13 22 47
19 15 31
19 21 34
23 17 37")
datos_P2<- read.table(textConnection(texto_P2), header = TRUE)
View(datos_P2)
datos_P2<- read.table(textConnection(texto_P2), header = TRUE)
datosL_P2 <- datos_P2 %>% pivot_longer (c( "words","colors", "interfer"),
names_to = "tareas", values_to ="tiempo")
View(datosL_P2)
g_P2 <- ggqqplot (datosL_P2, x ="tiempo", y = "tareas", color = "tareas")
g_P2 <- g_P2 + facet_wrap (~ tareas )
print(g_P2)
datos_P2 <- rbind(instancia, datos_P2)
instancia <- factor (1:16)
datos_P2 <- rbind(instancia, datos_P2)
datos_P2<- read.table(textConnection(texto_P2), header = TRUE)
instancia <- factor (1:16)
datos_P2 <- rbind(instancia, datos_P2)
instancia <- factor (1:17)
datos_P2 <- rbind(instancia, datos_P2)
instancia <- c(1:17)
datos_P2 <- rbind(instancia, datos_P2)
View(datos_P2)
View(datos_P2)
View(datosL_P2)
View(datos_P2)
datos_P2<- read.table(textConnection(texto_P2), header = TRUE)
instancia <- c(1:17)
datos_P2["instancia"] <- instancia
instancia <- c(1:16)
datos_P2["instancia"] <- instancia
datos_P2<- datos_P2 %>%
add_column(Column_Before = "instancia",
.after = "words")
datos_P2<- read.table(textConnection(texto_P2), header = TRUE)
instancia <- c(1:16)
datos_P2<- datos_P2 %>%
add_column(instancia = "instancia",
.after = "words")
datos_P2<- datos_P2 %>%
add_column(instancia = "instancia",
.before = "words")
datos_P2<- read.table(textConnection(texto_P2), header = TRUE)
instancia <- c(1:16)
datos_P2<- datos_P2 %>%
add_column(instancia = "instancia",
.before = "words")
datosL_P2 <- datos_P2 %>% pivot_longer (c( "words","colors", "interfer"),
names_to = "tareas", values_to ="tiempo")
g_P2 <- ggqqplot (datosL_P2, x ="tiempo", y = "tareas", color = "tareas")
g_P2 <- g_P2 + facet_wrap (~ tareas )
print(g_P2)
#El  grafico qq nos permite confirmar que las muestras poseen una distribucion normal.
#4. Se procede aplicar la prueba de ANOVA, ya que es una prueba robusta para muestras del mismo
#tamaño.
#H0: Ningun algoritmo es mas eficiente que otro.
#H1: Existe al menos un algoritmo mas eficiente que otro
pruebaANOV_P2 <- ezANOVA ( data = datosL , dv = tiempo , within = algoritmo ,
wid = Instancia , return_aov = TRUE )
print(pruebaANOV)
pruebaANOV_P2 <- ezANOVA ( data = datosL_P2 , dv = tiempo , within = tareas ,
wid = instancia , return_aov = TRUE )
print(pruebaANOV_P2)
#PREGUNTA 2
alfa<-0.05
texto_P2 <-(" words colors interfer
15 26 42
12 5 44
16 15 32
9 25 38
21 19 44
18 19 44
21 19 32
9 14 42
21 17 35
17 21 31
16 15 29
21 20 38
13 22 47
19 15 31
19 21 34
23 17 37")
datos_P2<- read.table(textConnection(texto_P2), header = TRUE)
instancia <- factor(1:16)
datos_P2<- datos_P2 %>%
add_column(instancia = "instancia",
.before = "words")
datosL_P2 <- datos_P2 %>% pivot_longer (c( "words","colors", "interfer"),
names_to = "tareas", values_to ="tiempo")
#Como solicitan verificar si existen difereccias entres las tareas implementadas en el estudio,
#de debe aplicar la prueba de Anova para muestras correlacionadas. Primero se verifican las condiciones
#de esta prueba:
#Condiciones:
#1.Se verifica, puesto que el tiempo, como toda magnitud física,
#tiene una escala de intervalos iguales.
#2.Como las mediciones dependen de cada tarea y de cada estudiante que realiza la tarea,
#se confirma la independencia al interior de cada grupo
#3.Se implementa la prueba de normalidad para verificar el supuesto:
g_P2 <- ggqqplot (datosL_P2, x ="tiempo", y = "tareas", color = "tareas")
g_P2 <- g_P2 + facet_wrap (~ tareas )
print(g_P2)
#El  grafico qq nos permite confirmar que las muestras poseen una distribucion normal.
#4. Se procede aplicar la prueba de ANOVA, ya que es una prueba robusta para muestras del mismo
#tamaño.
#H0: Ningun algoritmo es mas eficiente que otro.
#H1: Existe al menos un algoritmo mas eficiente que otro
pruebaANOV_P2 <- ezANOVA ( data = datosL_P2 , dv = tiempo , within = tareas ,
wid = instancia , return_aov = TRUE )
print(pruebaANOV_P2)
datos_P2<- datos_P2 %>%
add_column(instancia = instancia,
.before = "words")
datosL_P2 <- datos_P2 %>% pivot_longer (c( "words","colors", "interfer"),
names_to = "tareas", values_to ="tiempo")
datos_P2<- read.table(textConnection(texto_P2), header = TRUE)
instancia <- factor(1:16)
datos_P2<- datos_P2 %>%
add_column(instancia = instancia,
.before = "words")
datosL_P2 <- datos_P2 %>% pivot_longer (c( "words","colors", "interfer"),
names_to = "tareas", values_to ="tiempo")
#se confirma la independencia al interior de cada grupo
#3.Se implementa la prueba de normalidad para verificar el supuesto:
g_P2 <- ggqqplot (datosL_P2, x ="tiempo", y = "tareas", color = "tareas")
g_P2 <- g_P2 + facet_wrap (~ tareas )
print(g_P2)
#El  grafico qq nos permite confirmar que las muestras poseen una distribucion normal.
#4. Se procede aplicar la prueba de ANOVA, ya que es una prueba robusta para muestras del mismo
#tamaño.
#H0: Ningun algoritmo es mas eficiente que otro.
#H1: Existe al menos un algoritmo mas eficiente que otro
pruebaANOV_P2 <- ezANOVA ( data = datosL_P2 , dv = tiempo , within = tareas ,
wid = instancia , return_aov = TRUE )
print(pruebaANOV_P2)
>>>>>>> Stashed changes
