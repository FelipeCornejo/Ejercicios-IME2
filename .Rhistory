install.packages("MASS")
library(MASS)
datos <- data(birthwt)
datos <- birthwt
View(datos)
peso <- datos %>% select(bwt)
library(MASS)
library(dplyr)
datos <- birthwt
peso <- datos %>% select(bwt)
View(peso)
library(MASS)
library(dplyr)
datos <- birthwt
peso <- datos %>% select(bwt,race)
View(peso)
peso_raza <- group_by(peso_raza,race)
library(MASS)
library(dplyr)
datos <- birthwt
peso_raza <- datos %>% select(bwt,race)
peso_raza <- group_by(peso_raza,race)
View(peso_raza)
peso_raza <- group_by(peso_raza,"race")
View(peso_raza)
peso_raza <- group_by(peso_raza,race)
datos <- birthwt
peso_raza <- datos %>% select(bwt,race)
peso_raza <- group_by(peso_raza,race)
peso_raza <- peso_raza %>% group_by(race)
library(MASS)
library(dplyr)
datos <- birthwt
peso_raza <- datos %>% select(bwt,race)
peso_raza <- peso_raza %>% group_by(race)
View(peso_raza)
A <- c(23 , 19, 25, 23, 20)
B <- c(26 , 24, 28, 23, 29)
C <- c(19 , 24, 20, 21, 17)
datos <- data.frame (A, B, C)
View(datos)
datos <- datos %>% pivot_longer (c("A", "B", "C"))
library(MASS)
library(dplyr)
library ( tidyverse )
datos <- datos %>% pivot_longer (c("A", "B", "C"))
View(datos)
datos <- data.frame (A, B, C)
datos <- datos %>% pivot_longer (c("A", "B", "C"))
library(MASS)
library(dplyr)
library ( tidyverse )
datos <- birthwt
peso_raza <- datos %>% select(bwt,race)
peso_raza <- peso_raza %>% group_by(race)
library(MASS)
library(dplyr)
library ( tidyverse )
datos <- birthwt
peso_raza <- datos %>% select(bwt,race)
library(MASS)
library(dplyr)
library ( tidyverse )
datos <- birthwt
peso_raza <- datos %>% select(bwt,race)
peso_raza <- peso_raza %>% arrange(asc(bwt))
peso_raza <- peso_raza %>% arrange(desc(bwt))
peso_raza <- peso_raza %>% arrange(desc(race))
library(MASS)
library(dplyr)
library ( tidyverse )
datos <- birthwt
peso_raza <- datos %>% select(bwt,race)
peso_raza <- peso_raza %>% arrange(race)
View(peso_raza)
library(MASS)
library(dplyr)
library (tidyverse)
library(ggpubr)
g <- ggqqplot (peso_raza ,
x = "bwt",
y = "race",
color = "race")
g <- g + facet_wrap (~race)
g <- g + rremove ("x. ticks ") + rremove ("x. text ")
g <- g + rremove ("y. ticks ") + rremove ("y. text ")
g <- g + rremove (" axis . title ")
print (g)
g <- ggqqplot (peso_raza,
x = "bwt",
y = "race",
color = "race")
g <- g + facet_wrap (~race)
g <- g + rremove ("x.ticks ") + rremove ("x.text ")
g <- g + rremove ("y.ticks ") + rremove ("y.text ")
g <- g + rremove (" axis.title ")
print (g)
g <- ggqqplot (peso_raza,
x = "bwt",
y = "race",
color = "race")
print (g)
g <- ggqqplot (peso_raza,
x = "bwt",
y = "race",
color = "race")
g <- g + facet_wrap (~race)
print (g)
library(MASS)
library(dplyr)
library (tidyverse)
library(ggpubr)
datos <- birthwt
peso_raza <- datos %>% select(bwt,race)
peso_raza <- peso_raza %>% arrange(race)
#Dado que nos piden evaluar si existen diferencias significativas entre los pesos de los bebes de distintas
#raza, se deben realizar comparaciones de distintas muestras, lo que implica realizar una prueba ANOVA.
#Condiciones para aplicar ANOVA:
#1. La escala con que se mide la variable dependiente tiene las propiedades de una escala de intervalos
#iguales.
#2. Se asume que las muestras son obtenidas al azar.
#3. Para comprobar o suponer que las muestras provienen de una poblaci贸n con distribuci贸n normal,
#se aplica el grafico q-q.
g <- ggqqplot (peso_raza,
x = "bwt",
y = "race",
color = "race")
g <- g + facet_wrap (~race)
print (g)
#4. Se puede visualizar que los muestras tienden a una distribuci贸n normal, por lo que se asume que la
#poblaci贸n tambien lo hace.
#
muestra1 <- peso_raza %>% filter(race=="1")
muestra2 <- peso_raza %>% filter(race=="2")
muestra3 <- peso_raza %>% filter(race=="3")
View(muestra1)
muestra1[,1]
muestra1 <- peso_raza %>% filter(race=="1")
var1 <- var(muestra1[,1])
muestra2 <- peso_raza %>% filter(race=="2")
var2 <- var(muestra2[,1])
muestra3 <- peso_raza %>% filter(race=="3")
var3 <- var(muestra3[,1])
cat("Var1,Var2,Var3")
print(var1,var2,var3)
cat("Var1")
print(var1)
cat("Var1")
print(var1)
cat("Var2")
print(var2)
cat("Var3")
print(var3)
cat("Razon entre variable mayor y menor")
print(dif)
dif <- var1/var2
cat("Razon entre variable mayor y menor")
print(dif)
cat ("\n\ nProcedimiento ANOVA usando ezANOVA \n\n")
prueba1 <- ezANOVA (
data = peso_raza,
dv = bwt,
between = peso_raza,
wid = instancia,
return_aov = TRUE )
print(prueba1)
install.packages("ez")
cat ("\n\ nProcedimiento ANOVA usando ezANOVA \n\n")
prueba1 <- ezANOVA (
data = peso_raza,
dv = bwt,
between = peso_raza,
wid = instancia,
return_aov = TRUE )
print(prueba1)
library(ez)
cat ("\n\ nProcedimiento ANOVA usando ezANOVA \n\n")
prueba1 <- ezANOVA (
data = peso_raza,
dv = bwt,
between = peso_raza,
wid = instancia,
return_aov = TRUE )
print(prueba1)
cat ("\n\ nProcedimiento ANOVA usando ezANOVA \n\n")
prueba1 <- ezANOVA (
data = peso_raza,
dv = bwt,
wid=bwt,
between = peso_raza,
return_aov = TRUE )
print(prueba1)
# Crear el data frame en formato ancho .
A <- c(23 , 19, 25, 23, 20)
B <- c(26 , 24, 28, 23, 29)
C <- c(19 , 24, 20, 21, 17)
datos1 <- data.frame (A, B, C)
# Llevar data frame a formato largo .
datos2 <- datos %>% pivot_longer (c("A", "B", "C"),
names_to = " algoritmo ",
values_to = " tiempo ")
# Crear el data frame en formato ancho .
A <- c(23 , 19, 25, 23, 20)
B <- c(26 , 24, 28, 23, 29)
C <- c(19 , 24, 20, 21, 17)
datos1 <- data.frame(A, B, C)
# Llevar data frame a formato largo .
datos2 <- datos %>% pivot_longer (c("A", "B", "C"),
names_to = " algoritmo ",
values_to = " tiempo ")
A <- c(23, 19, 25, 23, 20)
B <- c(26, 24, 28, 23, 29)
C <- c(19, 24, 20, 21, 17)
datos1 <- data.frame(A, B, C)
# Llevar data frame a formato largo .
datos2 <- datos1 %>% pivot_longer (c("A", "B", "C"),
names_to = " algoritmo ",
values_to = " tiempo ")
View(datos1)
View(datos2)
datos [["race"]] <- factor ( datos [["race" ]])
datos [["instancia"]] <- factor (1: nrow ( datos ))
cat ("\n\ nProcedimiento ANOVA usando ezANOVA \n\n")
prueba1 <- ezANOVA (
data =datos ,
dv = bwt,
wid=instancia,
between = race,
return_aov = TRUE )
print(prueba1)
g2 <- ezPlot (
data =datos ,
dv = bwt,
wid=instancia,
between = race,
return_aov = TRUE )
print(g2)
g2 <- ezPlot (
data =datos ,
dv = bwt,
wid=instancia,
between = race )
print(g2)
g2 <- ezPlot (
data =datos ,
dv = bwt,
wid=instancia,
between = race,
x = race)
print(g2)
